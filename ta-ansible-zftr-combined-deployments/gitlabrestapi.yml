- name: Find VMs
  azure_rm_virtualmachine_info:
    resource_group: "{{ lookup('env','azure_resource_group') }}"
  register: vm_list

- name: Parse VM List
  ansible.builtin.debug:
    var: item
  loop: "{{ vm_list | to_json | from_json | json_query(vm_name_query) }}"
  vars:
    vm_name_query: "vms[?ends_with(name,'radar-{{ lookup('env', 'ENVIRONMENT') }}')].name"
  register: nectar_vm_name
  no_log: true

- name: Set VM fact 
  set_fact:
    nectar_vm: "{{ nectar_vm_name.results[0].item }}"
  no_log: true

- name: Create GitLab issue for VM shutdown
  uri:
    url: "https://gitlab.com/api/v4/projects/{{ gitlab_project_id }}/issues"
    method: POST
    headers:
      Private-Token: "{{ lookup('env', 'GITLAB_TOKEN') }}"
      Content-Type: "application/json"
    body_format: json
    body: 
      title: "VM Shutdown Request: {{ nectar_vm }}"
      description: |
        Request to shutdown VM: {{ nectar_vm }}
        Resource Group: {{ lookup('env','azure_resource_group') }}
        Environment: {{ lookup('env','ENVIRONMENT') }}
        Date: {{ ansible_date_time.iso8601 }}
      labels: "vm-management,shutdown,azure"
    status_code: 201
  register: gitlab_issue
  when: nectar_vm is defined

- name: Stop Nectar Radar VM
  azure_rm_virtualmachine:
    resource_group: "{{ lookup('env','azure_resource_group') }}"
    name: "{{ nectar_vm }}"
    started: false
    tags: "{{ ta_tags|combine({'Persistence': 'Ignore','applicationRole': 'nectar', 'applicationFunction': 'decommission'}) }}"
    append_tags: false
  vars:
    current_nectar: "s-{{ lookup('env','environment_type') }}-dw-ccc-test-automation-nectar-{{ lookup('env','nectar_cx_version') }}-radar-{{ lookup('env','ENVIRONMENT') }}"
  when: 
    - nectar_vm != current_nectar
    - gitlab_issue.status == 201
  register: vm_shutdown_result

- name: Update GitLab issue with shutdown result
  uri:
    url: "https://gitlab.com/api/v4/projects/{{ gitlab_project_id }}/issues/{{ gitlab_issue.json.iid }}/notes"
    method: POST
    headers:
      Private-Token: "{{ lookup('env', 'GITLAB_TOKEN') }}"
      Content-Type: "application/json"
    body_format: json
    body:
      body: |
        VM Shutdown Result:
        Success: {{ vm_shutdown_result.changed | default(false) }}
        Timestamp: {{ ansible_date_time.iso8601 }}
        Details: {{ vm_shutdown_result.msg | default('No additional details') }}
  when: 
    - gitlab_issue.status == 201
    - vm_shutdown_result is defined