- name: Find VMs
  azure.azcollection.azure_rm_virtualmachine_info:
    resource_group: "{{ lookup('env','azure_resource_group') }}"
  register: vm_list

- name: Parse VM List
  ansible.builtin.debug:
    var: item
  loop: "{{ vm_list | to_json | from_json | json_query(vm_name_query) }}"
  vars:
    vm_name_query: "vms[?ends_with(name,'radar-{{ lookup('env', 'ENVIRONMENT') }}')].name"
  register: nectar_vm_name
  no_log: true

- name: Set VM fact 
  set_fact:
    nectar_vm: "{{ nectar_vm_name.results[0].item }}"
  no_log: true

- name: Set Backup PAT
  set_fact:
    backup_pat: "{{ lookup('env','NECTAR_BACKUP_PAT') }}"
  no_log: true

- name: Set Nectar version
  set_fact:
    nectar_version: "{{ lookup('env','nectar_cx_version') }}"

- name: Set liferay
  set_fact:
    liferay: "{{ lookup('env','liferay_version') }}"

- name: Set branch
  set_fact:
    branch: "{{ lookup('env','ENVIRONMENT') }}"

- name: Generate Restore Script
  template:
    src: 'templates/test_case_restore.ps1.j2'
    dest: '{{ playbook_dir }}/test_case_restore.ps1'

- name: Restore Test case data
  ansible.builtin.shell: az vm run-command invoke --command-id 'RunPowerShellScript' --resource-group  "{{ lookup('env','azure_resource_group') }}" --name {{ nectar_vm }} --scripts @/builds/dwp/digital-channels-contact/contact2/testautomation/ta-ansible/test_case_restore.ps1
